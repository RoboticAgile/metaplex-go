// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package editions_program_solana

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/desperatee/solana-go"
	ag_format "github.com/desperatee/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// MintIncrementingPriceEdition is the `mintIncrementingPriceEdition` instruction.
type MintIncrementingPriceEdition struct {
	Data *MintIncrementingPriceEditionIxData

	// [0] = [WRITE, SIGNER] buyer
	//
	// [1] = [] masterMintKey
	//
	// [2] = [WRITE] masterEditionPda
	//
	// [3] = [] masterMetadataPda
	//
	// [4] = [] seller
	//
	// [5] = [WRITE] saleStateAccount
	//
	// [6] = [WRITE] newEditionMetadataPda
	//
	// [7] = [WRITE] newEditionPda
	//
	// [8] = [WRITE] newEditionMintKey
	//
	// [9] = [WRITE] editionMarkPda
	//
	// [10] = [WRITE] depositAccountAddress
	//
	// [11] = [WRITE] buyerEditionTokenAccount
	//
	// [12] = [WRITE] exchangeFeeRecipient
	//
	// [13] = [] pdaDepositAuthority
	//
	// [14] = [] tokenProgram
	//
	// [15] = [] tokenMetadataProgram
	//
	// [16] = [] systemProgram
	//
	// [17] = [] rent
	//
	// [18] = [] instructions
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewMintIncrementingPriceEditionInstructionBuilder creates a new `MintIncrementingPriceEdition` instruction builder.
func NewMintIncrementingPriceEditionInstructionBuilder() *MintIncrementingPriceEdition {
	nd := &MintIncrementingPriceEdition{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 25),
	}
	return nd
}

// SetData sets the "data" parameter.
func (inst *MintIncrementingPriceEdition) SetData(data MintIncrementingPriceEditionIxData) *MintIncrementingPriceEdition {
	inst.Data = &data
	return inst
}

// SetBuyerAccount sets the "buyer" account.
func (inst *MintIncrementingPriceEdition) SetBuyerAccount(buyer ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(buyer).WRITE().SIGNER()
	return inst
}

// GetBuyerAccount gets the "buyer" account.
func (inst *MintIncrementingPriceEdition) GetBuyerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetMasterMintKeyAccount sets the "masterMintKey" account.
func (inst *MintIncrementingPriceEdition) SetMasterMintKeyAccount(masterMintKey ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(masterMintKey)
	return inst
}

// GetMasterMintKeyAccount gets the "masterMintKey" account.
func (inst *MintIncrementingPriceEdition) GetMasterMintKeyAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetMasterEditionPdaAccount sets the "masterEditionPda" account.
func (inst *MintIncrementingPriceEdition) SetMasterEditionPdaAccount(masterEditionPda ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(masterEditionPda).WRITE()
	return inst
}

// GetMasterEditionPdaAccount gets the "masterEditionPda" account.
func (inst *MintIncrementingPriceEdition) GetMasterEditionPdaAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetMasterMetadataPdaAccount sets the "masterMetadataPda" account.
func (inst *MintIncrementingPriceEdition) SetMasterMetadataPdaAccount(masterMetadataPda ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(masterMetadataPda)
	return inst
}

// GetMasterMetadataPdaAccount gets the "masterMetadataPda" account.
func (inst *MintIncrementingPriceEdition) GetMasterMetadataPdaAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetSellerAccount sets the "seller" account.
func (inst *MintIncrementingPriceEdition) SetSellerAccount(seller ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(seller)
	return inst
}

// GetSellerAccount gets the "seller" account.
func (inst *MintIncrementingPriceEdition) GetSellerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetSaleStateAccountAccount sets the "saleStateAccount" account.
func (inst *MintIncrementingPriceEdition) SetSaleStateAccountAccount(saleStateAccount ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(saleStateAccount).WRITE()
	return inst
}

// GetSaleStateAccountAccount gets the "saleStateAccount" account.
func (inst *MintIncrementingPriceEdition) GetSaleStateAccountAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

// SetNewEditionMetadataPdaAccount sets the "newEditionMetadataPda" account.
func (inst *MintIncrementingPriceEdition) SetNewEditionMetadataPdaAccount(newEditionMetadataPda ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[6] = ag_solanago.Meta(newEditionMetadataPda).WRITE()
	return inst
}

// GetNewEditionMetadataPdaAccount gets the "newEditionMetadataPda" account.
func (inst *MintIncrementingPriceEdition) GetNewEditionMetadataPdaAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(6)
}

// SetNewEditionPdaAccount sets the "newEditionPda" account.
func (inst *MintIncrementingPriceEdition) SetNewEditionPdaAccount(newEditionPda ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[7] = ag_solanago.Meta(newEditionPda).WRITE()
	return inst
}

// GetNewEditionPdaAccount gets the "newEditionPda" account.
func (inst *MintIncrementingPriceEdition) GetNewEditionPdaAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(7)
}

// SetNewEditionMintKeyAccount sets the "newEditionMintKey" account.
func (inst *MintIncrementingPriceEdition) SetNewEditionMintKeyAccount(newEditionMintKey ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[8] = ag_solanago.Meta(newEditionMintKey).WRITE()
	return inst
}

// GetNewEditionMintKeyAccount gets the "newEditionMintKey" account.
func (inst *MintIncrementingPriceEdition) GetNewEditionMintKeyAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(8)
}

// SetEditionMarkPdaAccount sets the "editionMarkPda" account.
func (inst *MintIncrementingPriceEdition) SetEditionMarkPdaAccount(editionMarkPda ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[9] = ag_solanago.Meta(editionMarkPda).WRITE()
	return inst
}

// GetEditionMarkPdaAccount gets the "editionMarkPda" account.
func (inst *MintIncrementingPriceEdition) GetEditionMarkPdaAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(9)
}

// SetDepositAccountAddressAccount sets the "depositAccountAddress" account.
func (inst *MintIncrementingPriceEdition) SetDepositAccountAddressAccount(depositAccountAddress ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[10] = ag_solanago.Meta(depositAccountAddress).WRITE()
	return inst
}

// GetDepositAccountAddressAccount gets the "depositAccountAddress" account.
func (inst *MintIncrementingPriceEdition) GetDepositAccountAddressAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(10)
}

// SetBuyerEditionTokenAccountAccount sets the "buyerEditionTokenAccount" account.
func (inst *MintIncrementingPriceEdition) SetBuyerEditionTokenAccountAccount(buyerEditionTokenAccount ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[11] = ag_solanago.Meta(buyerEditionTokenAccount).WRITE()
	return inst
}

// GetBuyerEditionTokenAccountAccount gets the "buyerEditionTokenAccount" account.
func (inst *MintIncrementingPriceEdition) GetBuyerEditionTokenAccountAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(11)
}

// SetExchangeFeeRecipientAccount sets the "exchangeFeeRecipient" account.
func (inst *MintIncrementingPriceEdition) SetExchangeFeeRecipientAccount(exchangeFeeRecipient ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[12] = ag_solanago.Meta(exchangeFeeRecipient).WRITE()
	return inst
}

// GetExchangeFeeRecipientAccount gets the "exchangeFeeRecipient" account.
func (inst *MintIncrementingPriceEdition) GetExchangeFeeRecipientAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(12)
}

// SetPdaDepositAuthorityAccount sets the "pdaDepositAuthority" account.
func (inst *MintIncrementingPriceEdition) SetPdaDepositAuthorityAccount(pdaDepositAuthority ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[13] = ag_solanago.Meta(pdaDepositAuthority)
	return inst
}

// GetPdaDepositAuthorityAccount gets the "pdaDepositAuthority" account.
func (inst *MintIncrementingPriceEdition) GetPdaDepositAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(13)
}

// SetTokenProgramAccount sets the "tokenProgram" account.
func (inst *MintIncrementingPriceEdition) SetTokenProgramAccount(tokenProgram ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[14] = ag_solanago.Meta(tokenProgram)
	return inst
}

// GetTokenProgramAccount gets the "tokenProgram" account.
func (inst *MintIncrementingPriceEdition) GetTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(14)
}

// SetTokenMetadataProgramAccount sets the "tokenMetadataProgram" account.
func (inst *MintIncrementingPriceEdition) SetTokenMetadataProgramAccount(tokenMetadataProgram ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[15] = ag_solanago.Meta(tokenMetadataProgram)
	return inst
}

// GetTokenMetadataProgramAccount gets the "tokenMetadataProgram" account.
func (inst *MintIncrementingPriceEdition) GetTokenMetadataProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(15)
}

// SetSystemProgramAccount sets the "systemProgram" account.
func (inst *MintIncrementingPriceEdition) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[16] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "systemProgram" account.
func (inst *MintIncrementingPriceEdition) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(16)
}

// SetRentAccount sets the "rent" account.
func (inst *MintIncrementingPriceEdition) SetRentAccount(rent ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[17] = ag_solanago.Meta(rent)
	return inst
}

// GetRentAccount gets the "rent" account.
func (inst *MintIncrementingPriceEdition) GetRentAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(17)
}

// SetInstructionsAccount sets the "instructions" account.
func (inst *MintIncrementingPriceEdition) SetInstructionsAccount(instructions ag_solanago.PublicKey) *MintIncrementingPriceEdition {
	inst.AccountMetaSlice[18] = ag_solanago.Meta(instructions)
	return inst
}

// GetInstructionsAccount gets the "instructions" account.
func (inst *MintIncrementingPriceEdition) GetInstructionsAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(18)
}

// SetRemainingAccounts sets the additional accounts required in the instruction.
func (inst *MintIncrementingPriceEdition) SetRemainingAccounts(pk []ag_solanago.AccountMeta) *MintIncrementingPriceEdition {
	amount := len(pk)
	if amount == 0 {
		return inst
	}
	for i := 0; i < amount; i++ {
		inst.AccountMetaSlice[19+i] = &pk[i]
	}
	return inst
}

func (inst MintIncrementingPriceEdition) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_MintIncrementingPriceEdition,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst MintIncrementingPriceEdition) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *MintIncrementingPriceEdition) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.Data == nil {
			return errors.New("Data parameter is not set")
		}
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Buyer is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.MasterMintKey is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.MasterEditionPda is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.MasterMetadataPda is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.Seller is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.SaleStateAccount is not set")
		}
		if inst.AccountMetaSlice[6] == nil {
			return errors.New("accounts.NewEditionMetadataPda is not set")
		}
		if inst.AccountMetaSlice[7] == nil {
			return errors.New("accounts.NewEditionPda is not set")
		}
		if inst.AccountMetaSlice[8] == nil {
			return errors.New("accounts.NewEditionMintKey is not set")
		}
		if inst.AccountMetaSlice[9] == nil {
			return errors.New("accounts.EditionMarkPda is not set")
		}
		if inst.AccountMetaSlice[10] == nil {
			return errors.New("accounts.DepositAccountAddress is not set")
		}
		if inst.AccountMetaSlice[11] == nil {
			return errors.New("accounts.BuyerEditionTokenAccount is not set")
		}
		if inst.AccountMetaSlice[12] == nil {
			return errors.New("accounts.ExchangeFeeRecipient is not set")
		}
		if inst.AccountMetaSlice[13] == nil {
			return errors.New("accounts.PdaDepositAuthority is not set")
		}
		if inst.AccountMetaSlice[14] == nil {
			return errors.New("accounts.TokenProgram is not set")
		}
		if inst.AccountMetaSlice[15] == nil {
			return errors.New("accounts.TokenMetadataProgram is not set")
		}
		if inst.AccountMetaSlice[16] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
		if inst.AccountMetaSlice[17] == nil {
			return errors.New("accounts.Rent is not set")
		}
		if inst.AccountMetaSlice[18] == nil {
			return errors.New("accounts.Instructions is not set")
		}
	}
	return nil
}

func (inst *MintIncrementingPriceEdition) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("MintIncrementingPriceEdition")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=1]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("Data", *inst.Data))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=19]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("                buyer", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("        masterMintKey", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("     masterEditionPda", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("    masterMetadataPda", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("               seller", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta("            saleState", inst.AccountMetaSlice.Get(5)))
						accountsBranch.Child(ag_format.Meta("newEditionMetadataPda", inst.AccountMetaSlice.Get(6)))
						accountsBranch.Child(ag_format.Meta("        newEditionPda", inst.AccountMetaSlice.Get(7)))
						accountsBranch.Child(ag_format.Meta("    newEditionMintKey", inst.AccountMetaSlice.Get(8)))
						accountsBranch.Child(ag_format.Meta("       editionMarkPda", inst.AccountMetaSlice.Get(9)))
						accountsBranch.Child(ag_format.Meta("depositAccountAddress", inst.AccountMetaSlice.Get(10)))
						accountsBranch.Child(ag_format.Meta("    buyerEditionToken", inst.AccountMetaSlice.Get(11)))
						accountsBranch.Child(ag_format.Meta(" exchangeFeeRecipient", inst.AccountMetaSlice.Get(12)))
						accountsBranch.Child(ag_format.Meta("  pdaDepositAuthority", inst.AccountMetaSlice.Get(13)))
						accountsBranch.Child(ag_format.Meta("         tokenProgram", inst.AccountMetaSlice.Get(14)))
						accountsBranch.Child(ag_format.Meta(" tokenMetadataProgram", inst.AccountMetaSlice.Get(15)))
						accountsBranch.Child(ag_format.Meta("        systemProgram", inst.AccountMetaSlice.Get(16)))
						accountsBranch.Child(ag_format.Meta("                 rent", inst.AccountMetaSlice.Get(17)))
						accountsBranch.Child(ag_format.Meta("         instructions", inst.AccountMetaSlice.Get(18)))
					})
				})
		})
}

func (obj MintIncrementingPriceEdition) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `Data` param:
	err = encoder.Encode(obj.Data)
	if err != nil {
		return err
	}
	return nil
}
func (obj *MintIncrementingPriceEdition) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `Data`:
	err = decoder.Decode(&obj.Data)
	if err != nil {
		return err
	}
	return nil
}

// NewMintIncrementingPriceEditionInstruction declares a new MintIncrementingPriceEdition instruction with the provided parameters and accounts.
func NewMintIncrementingPriceEditionInstruction(
	// Parameters:
	data MintIncrementingPriceEditionIxData,
	// Accounts:
	buyer ag_solanago.PublicKey,
	masterMintKey ag_solanago.PublicKey,
	masterEditionPda ag_solanago.PublicKey,
	masterMetadataPda ag_solanago.PublicKey,
	seller ag_solanago.PublicKey,
	saleStateAccount ag_solanago.PublicKey,
	newEditionMetadataPda ag_solanago.PublicKey,
	newEditionPda ag_solanago.PublicKey,
	newEditionMintKey ag_solanago.PublicKey,
	editionMarkPda ag_solanago.PublicKey,
	depositAccountAddress ag_solanago.PublicKey,
	buyerEditionTokenAccount ag_solanago.PublicKey,
	exchangeFeeRecipient ag_solanago.PublicKey,
	pdaDepositAuthority ag_solanago.PublicKey,
	tokenProgram ag_solanago.PublicKey,
	tokenMetadataProgram ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey,
	rent ag_solanago.PublicKey,
	instructions ag_solanago.PublicKey,
	remainingAccounts []ag_solanago.AccountMeta) *MintIncrementingPriceEdition {
	return NewMintIncrementingPriceEditionInstructionBuilder().
		SetData(data).
		SetBuyerAccount(buyer).
		SetMasterMintKeyAccount(masterMintKey).
		SetMasterEditionPdaAccount(masterEditionPda).
		SetMasterMetadataPdaAccount(masterMetadataPda).
		SetSellerAccount(seller).
		SetSaleStateAccountAccount(saleStateAccount).
		SetNewEditionMetadataPdaAccount(newEditionMetadataPda).
		SetNewEditionPdaAccount(newEditionPda).
		SetNewEditionMintKeyAccount(newEditionMintKey).
		SetEditionMarkPdaAccount(editionMarkPda).
		SetDepositAccountAddressAccount(depositAccountAddress).
		SetBuyerEditionTokenAccountAccount(buyerEditionTokenAccount).
		SetExchangeFeeRecipientAccount(exchangeFeeRecipient).
		SetPdaDepositAuthorityAccount(pdaDepositAuthority).
		SetTokenProgramAccount(tokenProgram).
		SetTokenMetadataProgramAccount(tokenMetadataProgram).
		SetSystemProgramAccount(systemProgram).
		SetRentAccount(rent).
		SetInstructionsAccount(instructions).
		SetRemainingAccounts(remainingAccounts)
}
